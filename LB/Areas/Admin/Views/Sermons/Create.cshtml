@model Sermon

@{
    ViewData["Title"] = "Create Sermon";
}

<div id="app" class="row">
	<div class="col-lg-4">
		<div class="card">
			<div class="card-body">
				<form asp-action="Create" class="mb-3">
					@Html.AntiForgeryToken()

					<div class="form-group">
						<label>Title</label>
						<input type="text" asp-for="Title" class="form-control" />
						<span asp-validation-for="Title" class="small text-danger"></span>
					</div>

					<div class="form-group">
						<label>File Type</label>
						<select asp-items="@Html.GetEnumSelectList<FileType>()" asp-for="FileType" class="custom-select"></select>
						<span asp-validation-for="FileType" class="small text-danger"></span>
					</div>

					<div class="form-group">
						<input id="file" type="file" class="form-control-file" name="file" />
					</div>

					<div class="form-group">
						<label>Featured Image</label>
						<input type="hidden" asp-for="SiteImageId" />
						<img id="featuredImage" src="" class="img-fluid" alt="" />
						<div class="btn-group w-100">
							<button type="button" class="btn btn-block btn-primary" onclick="GetFeaturedImage('#SiteImageId', '#featuredImage')">Choose Image</button>
							<button type="button" class="btn btn-indigo btn-icon" onclick="ResetFeaturedImage('#SiteImageId', '#featuredImage')">
								<i class="fa fa-times"></i>
							</button>
						</div>
					</div>

					<div class="form-group">
						<button class="btn btn-primary">
							<i class="fa fa-plus"></i>
							Create
						</button>
					</div>
				</form>

				<div id="">
					<label id="PERCENT"></label>
					<div class="progress mg-b-20">
						<div id="PROGRESS-BAR" class="progress-bar" role="progressbar" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
					</div>
					<label id="STATUS"></label>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts { 
	<script>
		@*var app = new Vue({
			el: '#app',
			methods: {
				OnSubmit: function (e) {
					var form = e.target;

					$.ajax({
						url: '@Url.Action("Create")',
						method: 'POST',
						data: new FormData(form),
						contentType: false,
						processData: false,
						success: (data) => {

						}
					})
					alert(form);
				}
			}
		});*@

		$('form').submit(function (e) {
			e.preventDefault();

			var bar = $('#PROGRESS-BAR');
			var percent = $('#PERCENT');
			var status = $('#STATUS');

			$(this).ajaxSubmit({
				target: '#targetLayer',
				beforeSubmit: function() {
					var percentVal = '0%';
					bar.width(percentVal);
					percent.html(percentVal);
				},
				uploadProgress: function (event, position, total, percentComplete) {
					console.log(percentComplete);
					var percentVal = percentComplete + '%';
					bar.width(percentVal);
					percent.html(percentVal);
				},
				success: function(xhr) {
					status.html(xhr.responseText);
					toastr.success("Success");
				},
				error: function (a, b, c) {
					toastr.error(a);
					toastr.error(b);
					toastr.error(c);
					console.log("a", a);
					console.log("b", b);
					console.log("c", c);
				},
				resetForm: true
			});

			return false;
		})
	</script>
}